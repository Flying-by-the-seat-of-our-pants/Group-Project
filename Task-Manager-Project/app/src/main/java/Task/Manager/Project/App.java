/*
 * Name: Dave McDonald
 * Task Manager Project
 * Course: CS2263 (Spring 2021)
 * Date: April 4, 2021
 * Description:
 */

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Task.Manager.Project;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class App {

    private static final String FILE_NAME = "./archive.json";
    private static String choice = "n";
    private static String uName;
    private static String pWord;
    private static String eMail;
    private static List<User> users = new ArrayList<>();
    private static Catalog catalog = new Catalog();
    private static List<User> userList;

    /*public App(){
        super();
        users = new ArrayList();
        //users = new List();
        //catalog = new Catalog();
    }*/

    public static void main(String[] args) {

        Scanner myObj = new Scanner(System.in);
        loadUsers();

        while (choice == "N" || choice == "n") {
            //homepage

            //display
            System.out.println("Login(1), \n Register(2)\n");
            String picked = myObj.nextLine(); // get user input
            switch (picked) {
                case "1": // Login
                    System.out.println("Please enter user name: ");
                    uName = myObj.nextLine(); //get username
                    System.out.println("Please enter password: ");
                    pWord = myObj.nextLine(); //get password

                    //has to go to user list and see if user exists
                    //has to check for password
                    //if (users.userExists(uName)) {// if user exists,
                    //TODO: need users search() func.
                    //for(User u : users) {
                    for(int i = 0; i < users.size(); i++) {
                        if(users.get(i).verifyLogin(uName, pWord, users.get(i).loginStatus)){
                        /*if(users.get(i).userName.equals(uName) &&
                                users.get(i).password.equals(pWord)){*/
                            System.out.println("userName exists.");
                            System.out.println("password correct.");
                            users.get(i).loginStatus = true;
                            break;
                        }
                    }
                    //go to "Dashboard" - dashMenu();

                case "2": //Register
                    System.out.println("Please enter user name: ");
                    uName = myObj.nextLine(); //get username
                    System.out.println("Please enter password: ");
                    pWord = myObj.nextLine(); //get password
                    System.out.println("Please enter email: ");
                    eMail = myObj.nextLine(); //get email

                    for(int i = 0; i < users.size(); i++) {//if user already exists
                        if(users.get(i).userName.equals(uName)){
                            System.out.println("userName already exists.");
                            break;
                        }
                    }
                    User une = new User(eMail,uName,pWord);

                    break;
                default:
                    throw new IllegalStateException("Unexpected value: " + picked);
            }
            System.out.println("Do you wish to logout? Y or N");
            choice = myObj.nextLine(); //get choice
        } // end while choice loop
        //write data to archive.
    }

    private static void loadUsers(){
        users = catalog.getUsers(FILE_NAME);
    }

    private static void loginMenu(){

    }

    private static void dashMenu(){

    }


}