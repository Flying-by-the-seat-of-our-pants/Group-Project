/*
 * Name: Dave McDonald
 * Task Manager Project
 * Course: CS2263 (Spring 2021)
 * Date: April 4, 2021
 * Description:
 */

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Task.Manager.Project;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import static java.lang.System.exit;

public class App {

    private static final String FILE_NAME = "./archive.json";
    private static String choice = "n";
    private static String uName;
    private static String pWord;
    private static String eMail;
    private static List<User> users;// = new ArrayList<>();
    private static final Catalog catalog = new Catalog();
    private static User currUser;
    static Scanner myObj = new Scanner(System.in);

    public App(){
        super();
        users = new ArrayList();
    }

    public static void main(String[] args) {

        loadUsers();//Load stored data from json file

        while (choice.equals("N") || choice.equals("n")) {
            //display
            System.out.println("***** Menu *****\n" +
                               "----------------");
            System.out.println("Please choose from the following by entering" +
                    "the corresponding number.");
            System.out.println("Login(1),\n" +
                            "Register(2)\n");
                            //TODO: admin option?
            String picked = myObj.nextLine(); // get user input

            switch (picked) {
                case "1": // Login
                    System.out.println("Please enter user name: ");
                    uName = myObj.nextLine(); //get username
                    System.out.println("Please enter password: ");
                    pWord = myObj.nextLine(); //get password

                    //has to go to user list and see if user exists
                    //has to check for password
                    //TODO: need users search() func.
                    for(User u : users) {
                        if (u.verifyLogin(uName, pWord, u.loginStatus)) {
                            /*System.out.println("userName exists.");
                            System.out.println("password correct.");*/
                            u.loginStatus = true;
                            //set user
                            currUser = u;
                            System.out.println("Thank you, you are now logged in.\n");
                            //go to "Dashboard" - dashMenu();
                            dashMenu();
                            break;// leave for loop
                        }
                    }
                    //TODO: where to put this err msg??
                    //System.out.println("You have entered incorrect information.");
                    break;

                case "2": //Register
                    System.out.println("Please enter user name: ");
                    uName = myObj.nextLine(); //get username
                    //have to check if username already used
                    for(User u : users) {//if username already exists
                        if(u.userName.equals(uName)){
                            System.out.println("userName already exists.");
                            break;
                        }
                    }
                    System.out.println("Please enter password: ");
                    pWord = myObj.nextLine(); //get password
                    System.out.println("Please enter email: ");
                    eMail = myObj.nextLine(); //get email
                    //if email exists, user already has acct.
                    for(User u : users) {//if user already exists
                        if(u.email.equals(eMail)){
                            System.out.println("user already exists.");
                            break;
                        }
                    }
                    //TODO: add new user to users list
                    User une = new User(eMail,uName,pWord);
                    //send back to login? OR-
                    //go to "Dashboard" - dashMenu(); set User if this route
                    break;

                default:
                    throw new IllegalStateException("Unexpected value: " + picked);
            }

            System.out.println("Return to Dashboard? (Y/N)");
            choice = myObj.nextLine();
            if(choice.equals("Y") || choice.equals("y")){
                dashMenu();//return to dashboard.
            }
            System.out.println("Do you wish to logout? Y or N");
            choice = myObj.nextLine(); //get choice

        } // end while choice loop

        currUser.loginStatus = false;// logout currUser
        //write data to archive.

        catalog.archiveUsers(FILE_NAME, users);

    }

    //Load data from json file into List<User> users
    private static void loadUsers(){
        users = catalog.getUsers(FILE_NAME);
    }

    //in lieu of GUI, this will present a login for the user.
    private static void loginMenu(){
        //TODO: implement loginMenu and call in main
    }

    //in lieu of GUI, this will present a dashboard for the user.
    private static void dashMenu() {
        //TODO: Add while loop OR recursive call
        System.out.println("*** Dashboard ***");
        System.out.println("Hello " + currUser.userName + ",\n\n");

        System.out.println("***** Options *****\n" +
                "-------------------");
        System.out.println("*View Lists (1).\n" +
                "*Add new List (2).\n" +
                "*Add new Task (3).\n" +
                "*Remove List (4).\n" +
                "*Remove Task (5).\n" +
                "*Move Task (6).\n" +
                "*Logout (7).\n");
        String menu = myObj.nextLine(); // get user input

        String tmpName, tmpTskName, tmpDesc, choice;
        switch (menu) {
            //TODO: just make some global vars up here
            case "1": //View Lists
                currUser.displayLists();

                break;

            case "2": //Add new list
                TDList templi;
                //get list name & desc
                System.out.println("Please enter list name: ");
                tmpName = myObj.nextLine(); //get list name
                System.out.println("Please enter list desc: ");
                tmpDesc = myObj.nextLine(); //get description
                currUser.createList(tmpName, tmpDesc);
                templi = currUser.lastList();
                //TODO: mess with display? call function?
                System.out.println("Your new list is: " + templi.listName );
                /*System.out.println("Return to Dashboard? (Y/N)");
                choice = myObj.nextLine();
                if(choice.equals("Y") || choice.equals("y")){
                    dashMenu();//return to dashboard.
                }*/
                break;

            case "3": //Add new task
                //get list name & desc
                System.out.println("Please enter name of list to add task to: ");
                tmpName = myObj.nextLine(); //get list name
                System.out.println("Please enter task name: ");
                tmpTskName = myObj.nextLine(); //get task name
                System.out.println("Please enter task desc: ");
                tmpDesc = myObj.nextLine(); //get description
                currUser.createTask(tmpName, tmpTskName, tmpDesc);
                System.out.println("Your new tasks for,");
                currUser.displayTasks(tmpName);
                System.out.println("Return to Dashboard? (Y/N)");
                choice = myObj.nextLine();
                if(choice.equals("Y") || choice.equals("y")){
                    dashMenu();//return to dashboard.
                }
                break;

            case "4": //Remove list
                System.out.println("Please enter name of list to remove: ");
                tmpName = myObj.nextLine(); //get list name
                currUser.removeList(tmpName);
                break;

            case "5": //Remove task
                System.out.println("Please enter name of list to remove task from: ");
                tmpName = myObj.nextLine(); //get list name
                System.out.println("Please enter task name: ");
                tmpTskName = myObj.nextLine(); //get task name
                currUser.removeTask(tmpName, tmpTskName);
                break;

            case "6": //Move task from one list to another.

                break;

            case "7": //Logout
                System.out.println("Are you sure you wish to logout? (Y/N)");
                choice = myObj.nextLine();
                if(choice.equals("Y") || choice.equals("y")){
                    System.out.println("You are now logged out, thank you.");
                    exit(0);
                }
                break;

            default:
                throw new IllegalStateException("Unexpected value: " + menu);
        }

    }
}